<?xml version="1.0" encoding="UTF-8"?>
<project name="fpempresa" default="distOpenShift" basedir=".">
    <description>Builds, tests, and runs the project fpempresa.</description>
    <import file="nbproject/build-impl.xml"/>

    <target name="distDocker" depends="-configureAnt,-enableProduccion,clean,dist" >
    </target>
	
    <target name="-enableProduccion"  >
        <property name="enableProduccion" value="yes"/>
    </target>        
        
    <target name="sonar" depends="-configureAnt" >
        <property file="./sonar-project.properties"/>
        <!-- Estas propeiudades se deben actualizar según el servidor de sonar a usar -->
        <property name="sonar.host.url" value="http://sonar.fpempresa.net" />
        <property name="sonar.jdbc.url" value="jdbc:postgresql://localhost/sonar" />
        
        <property name="sonar.jdbc.username" value="" />
        <property name="sonar.jdbc.password" value="" />
	
        <!-- Antes de ejecutar la tarea quizas haya que hacer un tunel ssh al servidor de sonar -->
        <sonar />        
    </target>	
  
  
    <target name="jmeter" depends="-configureAnt" >
        <jmeter
            jmeterhome="${basedir}/jmeter"
            testplan="${basedir}/jmeter/fpempresa.jmx"
            resultlog="${basedir}/jmeter/fpempresa.jtl">
            <property name="jmeter.save.saveservice.output_format" value="xml"/>
            <property name="jmeter.save.saveservice.assertion_results" value="all"/>
            <property name="jmeter.save.saveservice.bytes" value="true"/>
            <property name="file_format.testlog" value="${format}"/>
            <property name="jmeter.save.saveservice.response_data.on_error" value="${funcMode}"/>
        </jmeter>
        <xslt in="${basedir}/jmeter/JMeterResults.jtl" out="${basedir}/jmeter/fpempresa.html" style="${basedir}/jmeter/extras/jmeter-results-report_21.xsl" force="true"/>
		
    </target>
  
    <target name="-configureAnt">
        <echo>Configurando Ant</echo>
        <!-- Cargar todas las variables de entorno -->
        <property environment="env"/>
        <!-- Si no está definida la variable la cojemos como variable de entorno -->
        <property name="env.APP_ENVIRONMENT" value="" />
        <property name="APP_ENVIRONMENT" value="${env.APP_ENVIRONMENT}" />

        <!-- OpenShift -->
        <taskdef  resource="es/logongas/openshift/ant/antlib.xml" />
   
        <property name="libs.CopyLibs.classpath" value="ant/lib/org-netbeans-modules-java-j2seproject-copylibstask.jar" />
        <property name="j2ee.server.home" value="ant" />

        <!-- Para tener el try-cath -->
        <taskdef  resource="net/sf/antcontrib/antcontrib.properties"/>
        <!-- Manejo de ficheros XML -->
        <taskdef  name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask"/>
        
        <!--tareas de sonar -->
        <taskdef resource="org/sonar/ant/antlib.xml"></taskdef>  
        
        <!--tareas de JMeter -->
        <taskdef name="jmeter" classname="org.programmerplanet.ant.taskdefs.jmeter.JMeterTask"/>		
		
        <!-- Propiedades del proyecto -->
        <property file="nbproject/project.properties"/>    
        
        
        <property name="max-memory-build-js" value="300" />
         
    </target>



    <target name="-pre-compile" depends="-pre-compile-configureProduccion">
    </target>


    <target name="-pre-compile-configureProduccion" if="enableProduccion">

    </target>

    <target name="-pre-dist" if="enableProduccion" >
        <antcall target="-pre-dist-configureProduccion"></antcall>
    </target>

    <target name="-post-dist" >
        <move file="${dist.dir}/${war.name}" tofile="${dist.dir}/ROOT.war"/>
    </target>

    <target name="-pre-dist-configureProduccion" depends="-set-os,-exec-gulp" >       
        <!-- Poner los datos de la conexión de producción -->
        <replace file="${build.web.dir}/META-INF/context.xml" token="localhost:3306/fpempresa" value="database-fpempresa-${env.APP_ENVIRONMENT}:3306/fpempresa"/>
        
        <copy file="../private/config.properties.${env.APP_ENVIRONMENT}" tofile="./build/web/WEB-INF/classes/config.properties"/>
        <tstamp>
            <format property="VERSION" pattern="yyyyMMddHHmmss"/>
        </tstamp>            
        <replace file="${build.web.dir}/site/fragments/footer/footer.html" token="@@BUILD-STAMP@@" value="${VERSION}"/>       
    </target>

    <target name="-set-os" >
        <condition property="windowsos">
            <os family="windows" />
        </condition>

        <condition property="linuxos">
            <os family="unix" />
        </condition>
    </target>

    <target name="-exec-grunt"  >
        <antcall target="-exec-grunt-linux"></antcall>
        <antcall target="-exec-grunt-windows"></antcall>
    </target>    

    <target name="-exec-grunt-linux" if="linuxos">	
        <exec executable="./node/bin/node64" failonerror="true"  >
            <arg value="--max_old_space_size=${max-memory-build-js}"/>
            <arg value="-e"/>
            <arg value="require('grunt').tasks(['default']);"/>
        </exec>
    </target>
    <target name="-exec-grunt-windows" if="windowsos">
        <exec executable="./node/bin/node64.exe" failonerror="true"  >
            <arg value="--max_old_space_size=${max-memory-build-js}"/>            
            <arg value="-e"/>
            <arg value="require('grunt').tasks(['default']);"/>
        </exec>
    </target>
    
    <target name="-exec-gulp"  >
        <antcall target="-exec-gulp-linux"></antcall>
        <antcall target="-exec-gulp-windows"></antcall>
    </target>  
    
    <target name="-exec-gulp-linux" if="linuxos">	
        <exec executable="./node/bin/node64" failonerror="true" >
            <arg value="--max_old_space_size=${max-memory-build-js}"/>            
            <arg value="./node_modules/gulp/bin/gulp.js"/>
        </exec>
    </target>
    <target name="-exec-gulp-windows" if="windowsos">
        <exec executable="./node/bin/node64.exe" failonerror="true" >
            <arg value="--max_old_space_size=${max-memory-build-js}"/>            
            <arg value="./node_modules/gulp/bin/gulp.js"/>
        </exec>
    </target>     
    

</project>
